---
title: "LESSHHGOOO"
author: "Harry Robertson"
date: "12/06/2021"
output: html_document
---

```{r, echo=FALSE, message=FALSE}
library(Biobase)
library(GEOquery)
library(oligo)
library(BiocManager)
library(ggfortify)
library(ggplot2)
library(scater)
library(Seurat)
library(tidyverse)
library(tidyr)
library(PhosR)
library(directPA)
library(pheatmap)
library(RColorBrewer)
library(org.Hs.eg.db)
library(limma)
library(edgeR)
library(Glimma)
library(DESeq2)
library(Homo.sapiens)
library(naniar)
library(plotly)
library(writexl)
library(pairsD3)
library(GEOquery)
library(org.Hs.eg.db)
library(limma)
library(edgeR)
library(Glimma)
library(Seurat)
library(SeuratObject)
library(Homo.sapiens)
library(gplots)
library(dplyr)
library(rPanglaoDB)
library(harmony)
library(Nebulosa)
library(enrichR)
library(GSVA)
library(statsExpressions)
options(timeout = 1000000)
```

```{r}
set.seed(1234)
SRA716608 <- getSamples(sra = "SRA716608", merge = TRUE)
SRA716608
```

```{r}
set.seed(1234)
LiverCounts <- NormalizeData(SRA716608, verbose = FALSE)
LiverCounts <- ScaleData(LiverCounts, verbose = FALSE)
LiverCounts <- FindVariableFeatures(LiverCounts, verbose = FALSE)
LiverCounts <- RunPCA(LiverCounts, verbose = FALSE)
LiverCounts <- RunHarmony(LiverCounts, 
                               group.by.vars = 'orig.ident', 
                               max.iter.harmony = 50, 
                               verbose = FALSE)
LiverCounts <- RunUMAP(LiverCounts, reduction = 'harmony', dims = 1:10)
UMAPPlot(LiverCounts) + theme_bw() + xlab('UMAP 1') + ylab('UMAP 2')
```

```{r}
set.seed(1234)
LiverCounts <- FindNeighbors(LiverCounts, reduction = 'harmony', verbose = FALSE)
LiverCounts <- FindClusters(LiverCounts, verbose = FALSE)
UMAPPlot(LiverCounts, label = TRUE) + theme_classic() +
  xlab('UMAP 1') + ylab('UMAP 2') + theme(legend.position = 'None')
```

```{r}
set.seed(1234)
sig.genes.tol.mapping <- sig.genes.tol[which(sig.genes.tol %in% rownames(LiverCounts))]
P <- plot_density(object = LiverCounts, 
                  features = sig.genes.tol.mapping, 
                  joint = TRUE)
P[[53]] + theme_classic() + xlab('t-SNE 1') + ylab('t-SNE 2') + theme(legend.position = "right") + ggtitle("TolDC Gene Set In Liver")
```

```{r, fig.width=5}
set.seed(1234)
UMAPPlot(LiverCounts, label = TRUE, repel = TRUE, group.by = "CellTypes") 
```

```{r, fig.height=5}
DotPlot(object = LiverCounts, 
        scale.by = 'size', 
        scale = TRUE, 
        dot.min = 0.3, 
        cols = c('white', 'blue'), 
        col.min = 0, 
        col.max = 1,
        features = sig.genes.tol.mapping) +  
  coord_flip()
```
```{r}
plot <- P[[53]]
HoverLocator(plot = plot, information = FetchData(LiverCounts, vars = c("CellTypes")))
```

```{r, fig.width=5}
set.seed(1234)
UMAPPlot(LiverCounts, label = TRUE, repel = TRUE, group.by = "CellTypes")
```
```{r, fig.height=30, fig.width=30}
J <- plot_density(object = LiverCounts, 
                  features = sig.genes.tol.mapping, 
                  joint = TRUE,
                  combine = FALSE,
                  pal = "cividis")
```

```{r}
# plot <- J[[30]] + theme(legend.position = "right") + ggtitle("TolDC Gene Set In Liver")
# HoverLocator(plot = plot, information = FetchData(LiverCounts, vars = c("CellTypes")))
```

```{r}
J[[53]] + theme_classic() + xlab('UMAP 1') + ylab('UMAP 2') + theme(legend.position = "right") 
```

```{r}
J <- plot_density(object = LiverCounts, 
                  features = sig.genes.tol.ORDERED[1:20], 
                  joint = TRUE,
                  combine = FALSE,
                  pal = "magma",
                  method = "ks")
J[[21]] + theme_classic() + xlab('UMAP 1') + ylab('UMAP 2') + theme(legend.position = "right") + ggtitle("Joint Density Plot of Upregualted Genes \nin TolDC Signature")
```

```{r}
I <- intersect(sig.genes.tol.mapping, sig.genes.tol.ORDERED[-c(1:20)])
J <- plot_density(object = LiverCounts, 
                  features = I, 
                  joint = TRUE,
                  combine = FALSE,
                  pal = "magma",
                  method = "ks")
J[[30]] + theme_classic() + xlab('UMAP 1') + ylab('UMAP 2') + theme(legend.position = "right") + ggtitle("Joint Density Plot of Downregulated Genes \nin TolDC Signature")
```

```{r, warning=FALSE}
# remotes::install_github("supatt-lab/SingCellaR")
```

```{r}
XX <- LiverCounts[which(rownames(LiverCounts) %in% sig.genes.tol.ORDERED[1:20]),]
# Feature <- colSums(subset(LiverCounts, select = c(which(rownames(LiverCounts) %in% sig.genes.tol.mapping))), na.rm = TRUE)
UMAP.Clustered.Plot <- data.frame(LiverCounts@reductions[["umap"]]@cell.embeddings[,1:2],
                                  Cell.Type = LiverCounts@meta.data$CellTypes,
                                  TolDC.Expression = colMeans(XX))
UMAP.Clustered.Plot
    
I <- ggplot(UMAP.Clustered.Plot, aes(x = UMAP_1, y = UMAP_2)) + 
  geom_point(aes_string(colour =UMAP.Clustered.Plot$TolDC.Expression),size=0.5) + 
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) + 
  theme(axis.text.x=element_blank(),axis.ticks.x=element_blank()) + 
  theme(axis.text.y=element_blank(),axis.ticks.y=element_blank()) +
  scale_colour_gradient2(low = "blue", mid = c("yellow"),high = "red", midpoint = 0.5) +
  ggtitle("Mean Expression of genes upregulated in \nTolDC geneset")
II
```

```{r, fig.width=12, fig.height=5}
XX <- LiverCounts[which(rownames(LiverCounts) %in% sig.genes.tol.ORDERED[-c(1:20)]),]
# Feature <- colSums(subset(LiverCounts, select = c(which(rownames(LiverCounts) %in% sig.genes.tol.mapping))), na.rm = TRUE)
UMAP.Clustered.Plot <- data.frame(LiverCounts@reductions[["umap"]]@cell.embeddings[,1:2],
                                  Cell.Type = LiverCounts@meta.data$CellTypes,
                                  TolDC.Expression = colMeans(XX))
UMAP.Clustered.Plot
    
II <- ggplot(UMAP.Clustered.Plot, aes(x = UMAP_1, y = UMAP_2)) + 
  geom_point(aes_string(colour =UMAP.Clustered.Plot$TolDC.Expression),size=0.5) + 
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) + 
  theme(axis.text.x=element_blank(),axis.ticks.x=element_blank()) + 
  theme(axis.text.y=element_blank(),axis.ticks.y=element_blank()) +
  scale_colour_gradient2(low = "blue", mid = c("yellow"),high = "red", midpoint = 0.5) +
  ggtitle("Mean Expression of genes downregulated in \nTolDC geneset")
ggarrange(I,II,ncol = 2, labels = "AUTO")

```

```{r, fig.height=5}
DoHeatmap(subset(LiverCounts, downsample = 100), 
          features = sig.genes.tol.ORDERED, size = 3) + 
  scale_fill_gradientn(colors = c("white", "white", "purple")) + 
  theme(axis.text.y = element_text(color = rep(c("blue","red"),c(29,21)), size = 12))

DotPlot(LiverCounts, features=sig.genes.tol.ORDERED,  dot.scale = 13)  + RotatedAxis() +theme(axis.text.x = element_text(color = rep(c("red","blue"),c(20,30)), size = 12)) + NoLegend() + ylab("Clusters")
```

```{r}
LiverCounts
VlnPlot(LiverCounts[sig.genes.tol,], features = "NCOA4",
          group.by = "CellTypes", pt.size = 0.2)
```
